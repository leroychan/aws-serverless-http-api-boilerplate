const logger = require('./logger');
const emf = require('./emf');

const formulateApiResponseSuccess = (response, context) =>
  formulateApiResponse(200, response, context);

const formulateApiResponseCreated = (response, context) =>
  formulateApiResponse(201, response, context);

const formulateApiResponseNoContent = (response, context) =>
  formulateApiResponse(204, response, context);

const formulateApiResponseBadRequest = (response, context) =>
  formulateApiResponse(400, response, context);

const formulateApiResponseForbidden = (response, context) =>
  formulateApiResponse(403, response, context);

const formulateApiResponseError = (response, context) =>
  formulateApiResponse(500, response, context);

const formulateApiResponse = (statusCode, response, context) => {
  const returnResponse = {
    statusCode,
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(response),
  };
  logger.info(returnResponse, {
    functionName: 'utils:apigw:formulateApiResponse',
    logType: 'apigw:response',
    ...context,
  });
  emf.publishMetricCount('API Gateway', statusCode, 1);
  return returnResponse;
};

module.exports = {
  formulateApiResponseSuccess,
  formulateApiResponseCreated,
  formulateApiResponseNoContent,
  formulateApiResponseBadRequest,
  formulateApiResponseForbidden,
  formulateApiResponseError,
};
